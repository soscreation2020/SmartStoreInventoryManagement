// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartStoreInventoryManagement.Core.EF.Context;

namespace SmartStoreInventoryManagement.Core.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200514152811_Sp_GetAllUnitOfMeasure")]
    partial class Sp_GetAllUnitOfMeasure
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.Bank", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AbbrCode")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(350)")
                        .HasMaxLength(350);

                    b.Property<string>("RegNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Bank");
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.BankAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccountNo")
                        .HasColumnType("nvarchar(13)")
                        .HasMaxLength(13);

                    b.Property<Guid?>("Bank_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.HasIndex("Bank_Id");

                    b.ToTable("BankAccount");
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.Branch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Department_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("RegNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Department_Id");

                    b.ToTable("Branch");
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategorNumber")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MobileNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("OfficeNo")
                        .HasColumnType("nvarchar(13)")
                        .HasMaxLength(13);

                    b.Property<string>("TaxId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DoB")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMale")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("TelNo")
                        .HasColumnType("nvarchar(13)")
                        .HasMaxLength(13);

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("RegNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.MyAppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1b6b6b0-0825-4975-a93d-df3dc86f8cc7"),
                            ConcurrencyStamp = "48e50a3d18e24ccaa0e62edb6791414e",
                            Name = "SYS_ADMIN",
                            NormalizedName = "SYS_ADMIN"
                        },
                        new
                        {
                            Id = new Guid("0718ddef-4067-4f29-aaa1-98c1548c1807"),
                            ConcurrencyStamp = "182637a440e74bf098b967b51aacbb95",
                            Name = "SUPER_ADMIN",
                            NormalizedName = "SUPER_ADMIN"
                        },
                        new
                        {
                            Id = new Guid("8b93d395-a71a-4620-9352-5b9e6b3b6045"),
                            ConcurrencyStamp = "93e630b603874acaa30d7e0e57056210",
                            Name = "SUPERUSER",
                            NormalizedName = "SUPERUSER"
                        },
                        new
                        {
                            Id = new Guid("02bde570-4aa8-4c60-a462-07154aa69520"),
                            ConcurrencyStamp = "b00edf0940d84375b379788b0267639b",
                            Name = "STAFF_USER",
                            NormalizedName = "STAFF_USER"
                        });
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.MyAppRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.MyAppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<bool>("Activated")
                        .HasColumnType("bit");

                    b.Property<bool>("CanUseApplication")
                        .HasColumnType("bit");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastLoginDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SystemUser")
                        .HasColumnType("bit");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1989883f-4f99-43bf-a754-239bbbfec00e"),
                            AccessFailedCount = 0,
                            Activated = true,
                            CanUseApplication = false,
                            ConcurrencyStamp = "d5d161d6-c6ec-4cc9-b1d0-f8ecfed74ea4",
                            CreatedOnUtc = new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "system@smartstore.com",
                            EmailConfirmed = true,
                            FirstName = "Olaleye",
                            Gender = 0,
                            IsDeleted = false,
                            JoinDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastLoginDate = new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Walure",
                            LockoutEnabled = false,
                            NormalizedEmail = "SYSTEM@SMARTSTORE.COM",
                            NormalizedUserName = "SYSTEM@SMARTSTORE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEKvOFxOUo7iKRT24A6z018xsjrIbh4XAIwwxgYAL6GBRLroDneO28k3e5E/eRDqC5A==",
                            PhoneNumber = "08067623699",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "99ae0c45-d682-4542-9ba7-1281e471916b",
                            SystemUser = false,
                            TwoFactorEnabled = false,
                            UserName = "system@smartstore.com",
                            UserType = 0
                        },
                        new
                        {
                            Id = new Guid("3fb897c8-c25d-4328-9813-cb1544369fba"),
                            AccessFailedCount = 0,
                            Activated = true,
                            CanUseApplication = false,
                            ConcurrencyStamp = "1498c70c-1bc4-4292-8013-668264bd344e",
                            CreatedOnUtc = new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "superadmin@smartstore.com",
                            EmailConfirmed = true,
                            FirstName = "Olaleye",
                            Gender = 0,
                            IsDeleted = false,
                            JoinDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastLoginDate = new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Walure",
                            LockoutEnabled = false,
                            NormalizedEmail = "SUPERADMIN@SMARTSTORE.COM",
                            NormalizedUserName = "SUPERADMIN@SMARTSTORE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEKuIccxrWHyiq/KCdy2EpPuWWiRPPU5AEB4GrdD74q3pCrrQWLhjSsGbVPgKQl5Ytw==",
                            PhoneNumber = "08067623699",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "016020e3-5c50-40b4-9e66-bba56c9f5bf2",
                            SystemUser = false,
                            TwoFactorEnabled = false,
                            UserName = "superadmin@smartstore.com",
                            UserType = 1
                        },
                        new
                        {
                            Id = new Guid("973af7a9-7f18-4e8b-acd3-bc906580561a"),
                            AccessFailedCount = 0,
                            Activated = true,
                            CanUseApplication = false,
                            ConcurrencyStamp = "eb6fe876-a56b-4d78-ae9c-78c493b587e6",
                            CreatedOnUtc = new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "storemanager@vericore.com",
                            EmailConfirmed = true,
                            FirstName = "Prolifik",
                            Gender = 0,
                            IsDeleted = false,
                            JoinDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastLoginDate = new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Lexzy",
                            LockoutEnabled = false,
                            NormalizedEmail = "STOREMANAGER@VERICORE.COM",
                            NormalizedUserName = "STOREMANAGER@VERICORE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEC5uNpL6tbg1wQl0r2ZsfROqxM5suuYRtCxSUscmEPV24V7JbFzVfwhHGzpDv6vo8g==",
                            PhoneNumber = "08062066851",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "7d728c76-1c51-491a-99db-bde6a5b0655b",
                            SystemUser = false,
                            TwoFactorEnabled = false,
                            UserName = "storemanager@vericore.com",
                            UserType = 2
                        },
                        new
                        {
                            Id = new Guid("129712e3-9214-4dd3-9c03-cfc4eb9ba979"),
                            AccessFailedCount = 0,
                            Activated = true,
                            CanUseApplication = false,
                            ConcurrencyStamp = "adb93a36-16c3-4c73-8d1e-cff9488f3890",
                            CreatedOnUtc = new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "staff@smartstore.com",
                            EmailConfirmed = true,
                            FirstName = "Bolaji",
                            Gender = 0,
                            IsDeleted = false,
                            JoinDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastLoginDate = new DateTime(2019, 9, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Siraj",
                            LockoutEnabled = false,
                            NormalizedEmail = "STAFF@SMARTSTORE.COM",
                            NormalizedUserName = "STAFF@SMARTSTORE.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEE0yW1aq3/sCGR9lKaBUHpoeAU2Ul5RcEIz9M4FBVDl3xtmJbtIiSdbfdFZL4NOYPA==",
                            PhoneNumber = "08062066851",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "953d3fd1-99e3-4fe7-a20d-3598baa96099",
                            SystemUser = false,
                            TwoFactorEnabled = false,
                            UserName = "staff@smartstore.com",
                            UserType = 1
                        });
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.MyAppUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.MyAppUserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.MyAppUserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("1989883f-4f99-43bf-a754-239bbbfec00e"),
                            RoleId = new Guid("a1b6b6b0-0825-4975-a93d-df3dc86f8cc7"),
                            Id = 0
                        },
                        new
                        {
                            UserId = new Guid("3fb897c8-c25d-4328-9813-cb1544369fba"),
                            RoleId = new Guid("0718ddef-4067-4f29-aaa1-98c1548c1807"),
                            Id = 0
                        },
                        new
                        {
                            UserId = new Guid("973af7a9-7f18-4e8b-acd3-bc906580561a"),
                            RoleId = new Guid("8b93d395-a71a-4620-9352-5b9e6b3b6045"),
                            Id = 0
                        },
                        new
                        {
                            UserId = new Guid("129712e3-9214-4dd3-9c03-cfc4eb9ba979"),
                            RoleId = new Guid("02bde570-4aa8-4c60-a462-07154aa69520"),
                            Id = 0
                        });
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.MyAppUserToken", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Category_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Class")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<decimal>("DiscountRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int>("OpenBalance")
                        .HasColumnType("int");

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.Property<string>("ProductNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProductShelf_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RFID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReOrderPoint")
                        .HasColumnType("int");

                    b.Property<string>("ReasonForInactivity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SellEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SellStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Staff_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("StandardCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StockOutWarning")
                        .HasColumnType("int");

                    b.Property<string>("Style")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TagNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("UnitCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("UnitOfMeasure_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VATRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("productType")
                        .HasColumnType("int");

                    b.Property<int>("productstatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Category_Id");

                    b.HasIndex("ProductShelf_Id");

                    b.HasIndex("Staff_Id");

                    b.HasIndex("UnitOfMeasure_Id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.ProductLocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Branch_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Department_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<Guid?>("PreviousBranch_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PreviousStore_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("ProductSold")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("Product_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("QuantityTransfered")
                        .HasColumnType("int");

                    b.Property<string>("RegNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Store_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("TransferDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("Branch_Id");

                    b.HasIndex("Department_Id");

                    b.HasIndex("PreviousBranch_Id");

                    b.HasIndex("PreviousStore_Id");

                    b.HasIndex("Product_Id");

                    b.HasIndex("Store_Id");

                    b.ToTable("ProductLocation");
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.ProductShelf", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("RegNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductShelf");
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.PurchaseOder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Branch_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PurchaseOrderID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SupplyDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TaxAmt")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("UserCreatedBy_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Vendor_Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Branch_Id");

                    b.HasIndex("UserCreatedBy_Id");

                    b.HasIndex("Vendor_Id");

                    b.ToTable("PurchaseOder");
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.PurchaseOrderDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderDetailNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("OrderQuantity")
                        .HasColumnType("real");

                    b.Property<Guid?>("Product_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PurchaseOder_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TaxValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("VAT")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("Product_Id");

                    b.HasIndex("PurchaseOder_Id");

                    b.ToTable("PurchaseOrderDetail");
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.RequestOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime>("ExpectedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestNumber")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<Guid?>("Store_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserCreatedBy_Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Store_Id");

                    b.HasIndex("UserCreatedBy_Id");

                    b.ToTable("RequestOrder");
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.RequestOrderDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderDetailNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Product_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("QuantityReleased")
                        .HasColumnType("int");

                    b.Property<int>("QuantityRequest")
                        .HasColumnType("int");

                    b.Property<Guid?>("RequestOrder_Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Product_Id");

                    b.HasIndex("RequestOrder_Id");

                    b.ToTable("RequestOrderDetail");
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.SellingPrice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("PriceNumber")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<Guid?>("Product_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SettingDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserCreatedBy_Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Product_Id");

                    b.HasIndex("UserCreatedBy_Id");

                    b.ToTable("SellingPrice");
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.Staff", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Branch_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Department_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("OfficeNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StaffNo")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Staff_Type")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<Guid>("User_Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Branch_Id");

                    b.HasIndex("Department_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("Staff");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1f1c57d1-14d9-4aca-8457-543b5874568b"),
                            CreateOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("1989883f-4f99-43bf-a754-239bbbfec00e"),
                            CreatedOn = new DateTime(2019, 9, 17, 6, 54, 57, 860, DateTimeKind.Utc),
                            IsDeleted = false,
                            ModifiedBy = new Guid("1989883f-4f99-43bf-a754-239bbbfec00e"),
                            ModifiedOn = new DateTime(2019, 9, 17, 6, 54, 57, 860, DateTimeKind.Utc),
                            StaffNo = "0001",
                            Staff_Type = 0,
                            Status = false,
                            Title = "Mrs.",
                            User_Id = new Guid("973af7a9-7f18-4e8b-acd3-bc906580561a")
                        },
                        new
                        {
                            Id = new Guid("dbb5809d-b496-45c0-a3f3-db2ac9e84251"),
                            CreateOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("1989883f-4f99-43bf-a754-239bbbfec00e"),
                            CreatedOn = new DateTime(2019, 9, 17, 6, 54, 57, 860, DateTimeKind.Utc),
                            IsDeleted = false,
                            ModifiedBy = new Guid("1989883f-4f99-43bf-a754-239bbbfec00e"),
                            ModifiedOn = new DateTime(2019, 9, 17, 6, 54, 57, 860, DateTimeKind.Utc),
                            StaffNo = "0002",
                            Staff_Type = 0,
                            Status = false,
                            Title = "Mr",
                            User_Id = new Guid("129712e3-9214-4dd3-9c03-cfc4eb9ba979")
                        },
                        new
                        {
                            Id = new Guid("8270691f-b40e-4794-8960-6b6b7ddc8e2c"),
                            CreateOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("1989883f-4f99-43bf-a754-239bbbfec00e"),
                            CreatedOn = new DateTime(2019, 9, 17, 6, 54, 57, 860, DateTimeKind.Utc),
                            IsDeleted = false,
                            ModifiedBy = new Guid("1989883f-4f99-43bf-a754-239bbbfec00e"),
                            ModifiedOn = new DateTime(2019, 9, 17, 6, 54, 57, 860, DateTimeKind.Utc),
                            StaffNo = "0003",
                            Staff_Type = 0,
                            Status = false,
                            Title = "Mr",
                            User_Id = new Guid("129712e3-9214-4dd3-9c03-cfc4eb9ba979")
                        });
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.Store", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("Branch_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Department_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<Guid?>("ProductLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProductShelf_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ProductStatus")
                        .HasColumnType("int");

                    b.Property<int>("ProductType")
                        .HasColumnType("int");

                    b.Property<Guid?>("Product_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int")
                        .HasMaxLength(500);

                    b.Property<string>("StoreNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserCreatedBy_Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Branch_Id");

                    b.HasIndex("Department_Id");

                    b.HasIndex("ProductLocationId");

                    b.HasIndex("ProductShelf_Id");

                    b.HasIndex("Product_Id");

                    b.HasIndex("UserCreatedBy_Id");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.UnitOfMeasure", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Decimals")
                        .HasColumnType("int");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UnitOfMeasure");
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.Vendor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<Guid>("Company_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("MyAppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MyAppUser_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(350)")
                        .HasMaxLength(350);

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeNumber")
                        .HasColumnType("nvarchar(13)")
                        .HasMaxLength(13);

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Company_Id");

                    b.HasIndex("MyAppUserId");

                    b.ToTable("Vendor");
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.Voucher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AmountReleased")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("BankAccount_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Bank_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Branch_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ChequeNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LPO")
                        .HasColumnType("int");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaidStatus")
                        .HasColumnType("int");

                    b.Property<Guid?>("UserCreatedBy_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ValueDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Vendor_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("VoucherNumber")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.HasIndex("BankAccount_Id");

                    b.HasIndex("Bank_Id");

                    b.HasIndex("Branch_Id");

                    b.HasIndex("UserCreatedBy_Id");

                    b.HasIndex("Vendor_Id");

                    b.ToTable("Voucher");
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.BankAccount", b =>
                {
                    b.HasOne("SmartStoreInventoryManagement.Core.Models.Bank", "Bank")
                        .WithMany("BankAccount")
                        .HasForeignKey("Bank_Id");
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.Branch", b =>
                {
                    b.HasOne("SmartStoreInventoryManagement.Core.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("Department_Id");
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.MyAppRoleClaim", b =>
                {
                    b.HasOne("SmartStoreInventoryManagement.Core.Models.MyAppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.MyAppUserClaim", b =>
                {
                    b.HasOne("SmartStoreInventoryManagement.Core.Models.MyAppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.MyAppUserLogin", b =>
                {
                    b.HasOne("SmartStoreInventoryManagement.Core.Models.MyAppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.MyAppUserRole", b =>
                {
                    b.HasOne("SmartStoreInventoryManagement.Core.Models.MyAppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartStoreInventoryManagement.Core.Models.MyAppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.MyAppUserToken", b =>
                {
                    b.HasOne("SmartStoreInventoryManagement.Core.Models.MyAppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.Product", b =>
                {
                    b.HasOne("SmartStoreInventoryManagement.Core.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("Category_Id");

                    b.HasOne("SmartStoreInventoryManagement.Core.Models.ProductShelf", "ProductShelf")
                        .WithMany()
                        .HasForeignKey("ProductShelf_Id");

                    b.HasOne("SmartStoreInventoryManagement.Core.Models.Staff", "Staff")
                        .WithMany()
                        .HasForeignKey("Staff_Id");

                    b.HasOne("SmartStoreInventoryManagement.Core.Models.UnitOfMeasure", "UnitOfMeasure")
                        .WithMany()
                        .HasForeignKey("UnitOfMeasure_Id");
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.ProductLocation", b =>
                {
                    b.HasOne("SmartStoreInventoryManagement.Core.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("Branch_Id");

                    b.HasOne("SmartStoreInventoryManagement.Core.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("Department_Id");

                    b.HasOne("SmartStoreInventoryManagement.Core.Models.Branch", "PreviousBranch")
                        .WithMany()
                        .HasForeignKey("PreviousBranch_Id");

                    b.HasOne("SmartStoreInventoryManagement.Core.Models.Store", "PreviousStore")
                        .WithMany()
                        .HasForeignKey("PreviousStore_Id");

                    b.HasOne("SmartStoreInventoryManagement.Core.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("Product_Id");

                    b.HasOne("SmartStoreInventoryManagement.Core.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("Store_Id");
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.PurchaseOder", b =>
                {
                    b.HasOne("SmartStoreInventoryManagement.Core.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("Branch_Id");

                    b.HasOne("SmartStoreInventoryManagement.Core.Models.MyAppUser", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("UserCreatedBy_Id");

                    b.HasOne("SmartStoreInventoryManagement.Core.Models.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("Vendor_Id");
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.PurchaseOrderDetail", b =>
                {
                    b.HasOne("SmartStoreInventoryManagement.Core.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("Product_Id");

                    b.HasOne("SmartStoreInventoryManagement.Core.Models.PurchaseOder", "PurchaseOder")
                        .WithMany("LineItems")
                        .HasForeignKey("PurchaseOder_Id");
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.RequestOrder", b =>
                {
                    b.HasOne("SmartStoreInventoryManagement.Core.Models.Store", "Store")
                        .WithMany()
                        .HasForeignKey("Store_Id");

                    b.HasOne("SmartStoreInventoryManagement.Core.Models.MyAppUser", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("UserCreatedBy_Id");
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.RequestOrderDetail", b =>
                {
                    b.HasOne("SmartStoreInventoryManagement.Core.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("Product_Id");

                    b.HasOne("SmartStoreInventoryManagement.Core.Models.RequestOrder", "RequestOrder")
                        .WithMany("RequestItems")
                        .HasForeignKey("RequestOrder_Id");
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.SellingPrice", b =>
                {
                    b.HasOne("SmartStoreInventoryManagement.Core.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("Product_Id");

                    b.HasOne("SmartStoreInventoryManagement.Core.Models.MyAppUser", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("UserCreatedBy_Id");
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.Staff", b =>
                {
                    b.HasOne("SmartStoreInventoryManagement.Core.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("Branch_Id");

                    b.HasOne("SmartStoreInventoryManagement.Core.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("Department_Id");

                    b.HasOne("SmartStoreInventoryManagement.Core.Models.MyAppUser", "User")
                        .WithMany()
                        .HasForeignKey("User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.Store", b =>
                {
                    b.HasOne("SmartStoreInventoryManagement.Core.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("Branch_Id");

                    b.HasOne("SmartStoreInventoryManagement.Core.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("Department_Id");

                    b.HasOne("SmartStoreInventoryManagement.Core.Models.ProductLocation", null)
                        .WithMany("Stores")
                        .HasForeignKey("ProductLocationId");

                    b.HasOne("SmartStoreInventoryManagement.Core.Models.ProductShelf", "ProductShelf")
                        .WithMany()
                        .HasForeignKey("ProductShelf_Id");

                    b.HasOne("SmartStoreInventoryManagement.Core.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("Product_Id");

                    b.HasOne("SmartStoreInventoryManagement.Core.Models.MyAppUser", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("UserCreatedBy_Id");
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.Vendor", b =>
                {
                    b.HasOne("SmartStoreInventoryManagement.Core.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("Company_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartStoreInventoryManagement.Core.Models.MyAppUser", "MyAppUser")
                        .WithMany()
                        .HasForeignKey("MyAppUserId");
                });

            modelBuilder.Entity("SmartStoreInventoryManagement.Core.Models.Voucher", b =>
                {
                    b.HasOne("SmartStoreInventoryManagement.Core.Models.BankAccount", "BankAccount")
                        .WithMany()
                        .HasForeignKey("BankAccount_Id");

                    b.HasOne("SmartStoreInventoryManagement.Core.Models.Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("Bank_Id");

                    b.HasOne("SmartStoreInventoryManagement.Core.Models.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("Branch_Id");

                    b.HasOne("SmartStoreInventoryManagement.Core.Models.MyAppUser", "UserCreatedBy")
                        .WithMany()
                        .HasForeignKey("UserCreatedBy_Id");

                    b.HasOne("SmartStoreInventoryManagement.Core.Models.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("Vendor_Id");
                });
#pragma warning restore 612, 618
        }
    }
}
